name: Ansible Molecule
on:
  push:
  pull_request:
    paths:
      - 'ansible_collections/arista/cvp/roles/**/*'
      - 'ansible_collections/arista/cvp/plugins/**/*'
      - 'ansible_collections/arista/cvp/molecules/**/*'
      - 'requirements.txt'
      - '.github/workflows/molecule.yml'
jobs:
  molecule:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python_version: [ 3.6 ]
        avd_scenario:
          - dhcp_management_mac
          - dhcp_management_offline
          - dhcp_system_mac
          - cv_configlet
          - cv_device
    steps:
      - name: 'set environment variables'
        run: |
          echo "PY_COLORS=1" >> $GITHUB_ENV
          echo "ANSIBLE_FORCE_COLOR=1" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r development/requirements.txt
          pip install -r development/requirements-dev.txt

      - name: Execute molecule
        run: |
          cd ansible_collections/arista/cvp
          molecule test --destroy=never  --scenario-name ${{ matrix.avd_scenario }}
          ls -alR molecule

      - name: Test molecule results
        run: |
          pwd
          cd ansible_collections/arista/cvp/
          ls -alR

      - uses: actions/upload-artifact@v1
        with:
          name: molecule-results-${{ matrix.avd_scenario }}
          path: ansible_collections/arista/cvp/molecule/${{ matrix.avd_scenario }}
